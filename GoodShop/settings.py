"""
Django settings for GoodShop project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-i+-6piev5&qofxo*s(vdji)%vagfgu5n%z71mdgoampnnj%$a1"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "userapp.apps.UserappConfig",

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "GoodShop.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        'DIRS': [BASE_DIR / 'templates',BASE_DIR / 'utils'],  # 添加项目级模板目录
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "GoodShop.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'xingdong',  # 数据库名字
        'USER': 'root',
        'PASSWORD': 'liu021003',
        'HOST': '127.0.0.1',  # 那台机器安装了MySQL
        'PORT': 3306,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"   #校验错误显示用中文

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
import  os
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


#★★★★★加上media路径
# 媒体文件的 URL 前缀
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# 支付宝配置 - 支持沙箱/正式环境一键切换
# 环境变量控制：ALIPAY_ENV=prod 走正式，ALIPAY_ENV=sandbox 或不设置走沙箱
ALIPAY_ENV = os.getenv("ALIPAY_ENV", "sandbox").lower()

# 正式环境配置
PROD_ALIPAY = {
    "appid": "2021005197630133",  # 正式应用 APPID
    "gateway": "https://openapi.alipay.com/gateway.do",  # 正式网关
    "notify_url": "https://你的正式域名/user/alipay_notify/",  # 必须 HTTPS 且外网能访问
    "return_url": "https://你的正式域名/user/center/",  # 支付完成跳转地址
    "private_key_path": os.path.join(BASE_DIR, "keys/prod_app_private_key.pem"),
    "public_key_path":  os.path.join(BASE_DIR, "keys/prod_alipay_public_key.pem"),
    "debug": False,  # 正式环境
}

# 沙箱环境配置
SANDBOX_ALIPAY = {
    "appid": "9021000149644414",  # 沙箱 APPID
    "gateway": "https://openapi.alipaydev.com/gateway.do",  # 沙箱网关
    "notify_url": "http://127.0.0.1:8000/user/alipay_notify/",  # 本地测试地址
    "return_url": "http://127.0.0.1:8000/user/center/",  # 支付完成跳转地址
    "private_key_path": os.path.join(BASE_DIR, "keys/my_private_key.txt"),
    "public_key_path":  os.path.join(BASE_DIR, "keys/alipay_public_key.txt"),
    "debug": True,   # 沙箱环境
}

# 根据环境变量选择配置
ALIPAY = PROD_ALIPAY if ALIPAY_ENV == "prod" else SANDBOX_ALIPAY

# 日志记录当前环境（方便排查）
print(f"[支付宝环境] 当前运行在: {'正式环境' if ALIPAY_ENV == 'prod' else '沙箱环境'}")
print(f"[支付宝环境] AppID: {ALIPAY['appid']}")